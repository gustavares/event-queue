services:
  # rn-app:
  #   build:
  #     context: ./rn-app
  #     dockerfile: Dockerfile
  #   container_name: event-queue-rn-app
  #   volumes:
  #     - ./rn-app:/app
  #     - rn_app_node_modules:/app/node_modules
  #   ports:
  #     - "19000:19000"
  #     - "19001:19001"
  #     - "19002:19002"
  #     - "8081:8081"
  #   environment:
  #     - NODE_ENV=development
  #     - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
  #     - CHOKIDAR_USEPOLLING=true
  #     - WATCHMAN_SOCKFILE=/tmp/watchman.sock
  #     - REACT_NATIVE_PACKAGER_HOSTNAME=192.168.5.102

  # backend:
  #   build:
  #     context: .
  #     dockerfile: ./backend/Dockerfile
  #   container_name: event-queue-backend
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./:/app
  #     - backend_project_root_node_modules:/app/node_modules

  postgres:
    image: postgres:16-alpine
    container_name: event-queue-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=event_queue
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: event-queue-pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@eventqueue.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: mailhog
  #   restart: always
  #   ports:
  #     - "1025:1025" # SMTP port for sending emails
  #     - "8025:8025" # Web UI to view emails

volumes:
  # rn_app_node_modules:
  # backend_project_root_node_modules:
  postgres_data:
